ecartt = norm$estimate["sd"]
moyemp=mean(x)
moyemp
ICinf = moyemp-1.96*ecartt/sqrt(2)
ICinf
ICsup = moyemp+1.96*ecartt/sqrt(2)
ICsup
fnorm<-fitdist(cohort(1955, italy$rate$female, log=T), "norm" )
fnorm$estimate
mnorm<-fitdist(cohort(1955, italy$rate$male, log=T), "norm" )
mnorm$estimate
mnorm<-fitdist(cohort(1959, italy$rate$male, log=T), "norm" )
mnorm$estimate
horizon=20
#marcha aleatoire
#total
LCfor <- forecast(LCfit, h = horizon)
#Adapter les modèles
LC <- lc(link = "logit")
library(MASS)
library(fitdistrplus)
library(survival)
library(npsurv)
library(lsei)
library(StMoMo)
#Adapter les modèles
LC <- lc(link = "logit")
LCfit <- fit(LC, data = central2initial(ita.StMoMoData), ages.fit = ages.fit, years.fit = years.fit)
require(StMoMo)
# utilisation mort male/female/totale, exposition en milieu d'année
ita.StMoMoData<-StMoMoData(data=italy, series = "total",type="central")
ita.StMoMoDataF<-StMoMoData(data=italy, series = "female",type="central")
ita.StMoMoDataM<-StMoMoData(data=italy, series = "male",type="central")
#apporter à la première année  pour (male/female/totale)
ita.StMoMoData.Ini<-central2initial(ita.StMoMoData)
ita.StMoMoData.IniF<-central2initial(ita.StMoMoDataF)
ita.StMoMoData.IniM<-central2initial(ita.StMoMoDataF)
#Adapter les modèles
LC <- lc(link = "logit")
LCfit <- fit(LC, data = central2initial(ita.StMoMoData), ages.fit = ages.fit, years.fit = years.fit)
#plage d'âges supposer un âge maximum de 100 ans
ages.fit = 0:100
#période de calibration
years.fit = 1955:2018
#Adapter les modèles
LC <- lc(link = "logit")
LCfit <- fit(LC, data = central2initial(ita.StMoMoData), ages.fit = ages.fit, years.fit = years.fit)
LCfitF <- fit(LC, data = central2initial(ita.StMoMoDataF), ages.fit = ages.fit, years.fit = years.fit)
LCfitM <- fit(LC, data = central2initial(ita.StMoMoDataM), ages.fit = ages.fit, years.fit = years.fit)
horizon=20
#marcha aleatoire
#total
LCfor <- forecast(LCfit, h = horizon)
#female
LCforF<- forecast( LCfitF, h = horizon)
#male
LCforM<- forecast( LCfitM, h = horizon)
#Adapter les modèles
LC <- lc(link = "logit")
LCfit <- fit(LC, data = central2initial(ita.StMoMoData), ages.fit = ages.fit, years.fit = fyears.fit)
#plage d'âges supposer un âge maximum de 100 ans
ages.fit = 0:100
#période de calibration
fyears.fit = 1955:2018
myears.fit = 1959:2018
#Adapter les modèles
LC <- lc(link = "logit")
LCfit <- fit(LC, data = central2initial(ita.StMoMoData), ages.fit = ages.fit, years.fit = fyears.fit)
LCfitF <- fit(LC, data = central2initial(ita.StMoMoDataF), ages.fit = ages.fit, years.fit = fyears.fit)
LCfitM <- fit(LC, data = central2initial(ita.StMoMoDataM), ages.fit = ages.fit, years.fit = myears.fit)
horizon=20
#marcha aleatoire
#total
LCfor <- forecast(LCfit, h = horizon)
#female
LCforF<- forecast( LCfitF, h = horizon)
#male
LCforM<- forecast( LCfitM, h = horizon)
horizon=20
#marche aleatoire
#total
LCfor <- forecast(LCfit, h = horizon)
#female
LCforF<- forecast( LCfitF, h = horizon)
#male
LCforM<- forecast( LCfitM, h = horizon)
#marcha aleatoire
plot(LCfor, only.kt = TRUE)
#marcha aleatoire
plot(LCfor, only.kt = TRUE)
plot(LCforF, only.kt = TRUE)
plot(LCforM, only.kt = TRUE)
LCforArima <- forecast(LCfit, h = horizon, kt.method = "iarima",kt.order =c(0,1,1))
plot(LCforArima, only.kt = TRUE)
LCforArima <- forecast(LCfit, h = horizon, kt.method = "iarima",kt.order =c(0,1,1))
plot(LCforArima, only.kt = TRUE)
LCforArimaf <- forecast(LCfitF, h = horizon, kt.method = "iarima",kt.order =c(0,1,1))
plot(LCforArimaf, only.kt = TRUE)
LCforArimam <- forecast(LCfitM, h = horizon, kt.method = "iarima",kt.order =c(0,1,1))
plot(LCforArimam, only.kt = TRUE)
LCforArima <- forecast(LCfit, h = horizon, kt.method = "iarima",kt.order =c(0,1,1))
plot(LCforArima, only.kt = TRUE)
LCforArimaf <- forecast(LCfitF, h = horizon, kt.method = "iarima",kt.order =c(0,1,1))
plot(LCforArimaf, only.kt = TRUE)
LCforArimam <- forecast(LCfitM, h = horizon, kt.method = "iarima",kt.order =c(0,1,1))
plot(LCforArimam, only.kt = TRUE)
#les taux de 1955 en un seul vecteur:
chosen_cohort=1955
library(lifecontingencies)
historical1955F <- extractCohort(fitted(LCfitF, type = "rates"),
cohort = chosen_cohort)
forecasted1955F<- extractCohort(LCforF$rates,
cohort = chosen_cohort)
rates1955F <- c(historical1955F,forecasted1955F)
qx1955F<-mx2qx(rates1955F)
library(lifecontingencies)
#les taux de 1955 en un seul vecteur:
chosen_cohort=1955
install.packages("lifecontingencies")
library(lifecontingencies)
historical1955F <- extractCohort(fitted(LCfitF, type = "rates"),
cohort = chosen_cohort)
forecasted1955F<- extractCohort(LCforF$rates,
cohort = chosen_cohort)
rates1955F <- c(historical1955F,forecasted1955F)
qx1955F<-mx2qx(rates1955F)
#les taux de 1955 en un seul vecteur:
chosen_cohort=1955
install.packages("lifecontingencies")
library(lifecontingencies)
historical1955F <- extractCohort(fitted(LCfitF, type = "rates"),
cohort = chosen_cohort)
forecasted1955F<- extractCohort(LCforF$rates,
cohort = chosen_cohort)
rates1955F <- c(historical1955F,forecasted1955F)
qx1955F<-mx2qx(rates1955F)
#les taux de 1955 en un seul vecteur:
chosen_cohort=1955
install.packages("lifecontingencies")
library(lifecontingencies)
historical1955F <- extractCohort(fitted(LCfitF, type = "rates"),
cohort = chosen_cohort)
forecasted1955F<- extractCohort(LCforF$rates,
cohort = chosen_cohort)
rates1955F <- c(historical1955F,forecasted1955F)
qx1955F<-mx2qx(rates1955F)
#les taux de 1955 en un seul vecteur:
chosen_cohort=1955
install.packages("lifecontingencies")
library(lifecontingencies)
historical1955F <- extractCohort(fitted(LCfitF, type = "rates"),
cohort = chosen_cohort)
forecasted1955F<- extractCohort(LCforF$rates,
cohort = chosen_cohort)
rates1955F <- c(historical1955F,forecasted1955F)
qx1955F<-mx2qx(rates1955F)
install.packages("lifecontingencies")
historical1955M <- extractCohort(fitted(LCfitM, type = "rates"),
cohort = chosen_cohort)
#les taux de 1955 en un seul vecteur:
chosen_cohort=1955
install.packages("lifecontingencies")
library(lifecontingencies)
historical1955F <- extractCohort(fitted(LCfitF, type = "rates"),
cohort = chosen_cohort)
#les taux de 1955 en un seul vecteur:
chosen_cohort=1955
library(lifecontingencies)
historical1955F <- extractCohort(fitted(LCfitF, type = "rates"),
cohort = chosen_cohort)
library(MASS)
library(fitdistrplus)
library(survival)
library(npsurv)
library(lsei)
library(StMoMo)
#les taux de 1955 en un seul vecteur:
chosen_cohort=1955
library(lifecontingencies)
historical1955F <- extractCohort(fitted(LCfitF, type = "rates"),
cohort = chosen_cohort)
forecasted1955F<- extractCohort(LCforF$rates,
cohort = chosen_cohort)
rates1955F <- c(historical1955F,forecasted1955F)
qx1955F<-mx2qx(rates1955F)
historical1955M <- extractCohort(fitted(LCfitM, type = "rates"),
cohort = chosen_cohort)
forecasted1955M<- extractCohort(LCforM$rates,
cohort = chosen_cohort)
rates1955M <- c(historical1955M,forecasted1955M)
qx1955M<-mx2qx(rates1955M)
lifetableF<-probs2lifetable(probs=qx1955F,type = "qx",name =paste("LC","1955","lt",sep="_"))
historical1959M <- extractCohort(fitted(LCfitM, type = "rates"),
cohort = chosen_cohort)
forecasted1959M<- extractCohort(LCforM$rates,
cohort = chosen_cohort)
rates1959M <- c(historical1955M,forecasted1959M)
qx1959M<-mx2qx(rates1959M)
lifetableM<-probs2lifetable(probs=qx1959M,type = "qx",name =paste("LC","1959","lt",sep="_"))
ESPF=exn(lifetableF,x=62)
ESPF
Proba_decesF=qxt(lifetableF, x=62, t=20)
Proba_decesF
ESPM=exn(lifetableM,x=62)
ESPM
Prob_adecesM=qxt(lifetableM, x=62, t=20)
Prob_adecesM
# transformation de la lifetable en table actuarielle :
#Taux d'interet = 0.05
acttableF<-new("actuarialtable",x=lifetableF@x,
lx=lifetableF@lx,
interest = 0.05)
# transformation de la lifetable en table actuarielle pour les hommes  :
acttableM<-new("actuarialtable",x=lifetableM@x,
lx=lifetableM@lx,
interest = 0.05)
VAPF = axn(acttableF, x=62, n=20)
VAPF
VAPM = axn(acttableM, x=62, n=20)
VAPM
historical1955t <- extractCohort(fitted(LCfit, type = "rates"),
cohort = chosen_cohort)
forecasted1955t<- extractCohort(LCfor$rates,
cohort = chosen_cohort)
rates1955t <- c(historical1955t,forecasted1955t)
qx1955t<-mx2qx(rates1955t)
lifetablet<-probs2lifetable(probs=qx1955t,type = "qx",name =paste("LC","1955","lt",sep="_"))
ESPt=exn(lifetablet,x=62)
ESPt
Prob_adecest=qxt(lifetablet, x=62, t=20)
Prob_adecest
acttablet<-new("actuarialtable",x=lifetablet@x,
lx=lifetablet@lx,
interest = 0.05)
VAP_t = axn(acttablet, x=62, n=20)
VAP_t
ESPERANCE_VIE=matrix(c( "male :" ,"female : ", "total :" ,ESPM,ESPF,ESPt),nrow = 3,ncol=2)
ESPERANCE_VIE
VAP=matrix(c( "male :" ,"female : ", "total :" ,VAPM,VAPF,VAP_t),nrow = 3,ncol=2)
VAP
italyM<-lca(italy,series="male",max.age=100)
library(forecast)
library(demography)
ltm<-read.csv("C:/Users/MSI/Desktop/ACTUARIAT VIE/mltper_1x1.txt", sep="")
ltf<-read.csv("C:/Users/MSI/Desktop/ACTUARIAT VIE/fltper_1x1.txt", sep="")
summary(ltm)
summary(ltf)
View(ltm)
ltm$Age<-as.numeric(as.character(ltm$Age))
ltm$Age[111]<-110
plot(ltm$Age,ltm$lx,type="l")
ltf$Age<-as.numeric(as.character(ltf$Age))
ltf$Age[111]<-110
plot(ltf$Age,ltf$lx,type="l")
italy <- read.demogdata(file="C:/Users/MSI/Desktop/ACTUARIAT VIE/Mx_1x1.txt", popfile="C:/Users/MSI/Desktop/ACTUARIAT VIE/Exposures_1x1.txt",
type="mortality", label="ITA")
summary(italy)
class(italy) # type vérifié
names(italy)
# graphe taux de mortalité de la polpulation total en fonction de l'age
plot(italy, series = 'Total')
## avec légendes des années
legend("bottomright",legend=unique(italy$year),
col=rainbow(length(italy$year)*1.25), ncol=4, pch=3,
title="Year", cex=0.3)
years=c(1872:1945, 1945:1960, 1980:1990,2000:2018)
age_yr = extract.years(data = italy, years = years)
par(mar=c(5.1, 4.1, 4.1, 11), xpd=TRUE)
#ítotal
plot(italy,series='total',  ages=italy$age, years=years, max.age=max(italy$age) , plot.type="functions", main="taux de mortalité totale en italie 1872-2018 ",xlab="age")
legend("bottomright",legend=unique(age_yr$year),
col=rainbow(length(age_yr$year)*1.25), ncol=5, pch=3,
title="Year", cex=0.13)
par(mar=c(5.1, 4.1, 4.1, 11), xpd=TRUE)
#ítotal
plot(italy,series='female',  ages=italy$age, years=years, max.age=max(italy$age) , plot.type="functions", main="Mortalité féminine en italie 1872-2018 ",xlab="age")
legend("bottomright",legend=unique(age_yr$year),
col=rainbow(length(age_yr$year)*1.25), ncol=5, pch=3,
title="Year", cex=0.3)
par(mar=c(5.1, 4.1, 4.1, 11), xpd=TRUE)
#ítotal
plot(italy,series='male',  ages=italy$age, years=years, max.age=max(italy$age) , plot.type="functions", main="Mortalité masculine en italie (1872-2018) ",xlab="age")
legend("bottomright",legend=unique(age_yr$year),
col=rainbow(length(age_yr$year)*1.25), ncol=5, pch=3,
title="Year", cex=0.3)
par(mfrow=c(1,3))
plot(italy,series="male",datatype="rate", main="Male rates",ages=italy$age, years=years, max.age=max(italy$age))
plot(italy,series="female",datatype="rate", main="Female rates",ages=italy$age, years=years, max.age=max(italy$age))
plot(italy,"total",datatype="rate", main="Total rates",ages=italy$age, years=years, max.age=max(italy$age))
ita_years = c(1939:1945)
plot(italy, series = 'total', years = ita_years ,
main = "Mortalité pendant la 2éme guerre mondiale   1939 to 1945"
)
legend(x="bottomright", legend = ita_years,
col = rainbow(length(ita_years)*1.25),
lty = 1,
cex=0.7,
box.lwd = 0.3
)
par(mfrow=c(1,3))
plot(italy,series="male",datatype="rate",  plot.type="time", main="Male rates",xlab="Years")
plot(italy,series="female",datatype="rate", plot.type="time", main="Female rates",xlab="Years")
plot(italy,series="total",datatype="rate",  plot.type="time", main="Total rates",xlab="Years")
cohort <- function(year, rates, log=FALSE) {
xg <- diag(rates[, colnames(rates) >= year])
names(xg) <- paste(year, rownames(rates)[1:length(xg)], sep="-x=")
if(log)
xg <- log(xg)
xg }
cohort_of_cohorts <- function(years, rates, log=FALSE) {
xgs<-vector()
for (year in years)
{   xg <- diag(rates[, colnames(rates) >= year])
names(xg) <- paste(year, rownames(rates)[1:length(xg)], sep="-x=")
if(log)
xg <- log(xg)
xgs<-c(xgs,list(xg))   }
xgs }
colfunc <- colorRampPalette(c("red", "blue"))
cohorts<-cohort_of_cohorts(1955:2018, italy$rate$female,log=T)
plot(cohort(1955, italy$rate$female, log=T),col=colfunc(20)[1], type="l",ylim=c(-9,-4), main="Cohortes de femmes italiennes 1955-2018",xlab="age",ylab="taux de mortalité ")
i<-2
for (one_cohort in cohorts){
lines (one_cohort, col=colfunc(20)[i])
i<-i+1 }
legend(x="bottomright",legend=unique(1955:2018),col=colfunc(20), ncol=5, pch=19, title="Year", cex=0.5)
colfunc <- colorRampPalette(c("red", "blue"))
cohorts<-cohort_of_cohorts(1959:2018, italy$rate$male,log=T)
plot(cohort(1959, italy$rate$male, log=T),col=colfunc(20)[1], type="l",ylim=c(-9,-4), main="Cohortes d'hommes italiens 1959-2018",xlab="age",ylab="taux de mortalité ")
i<-2
for (one_cohort in cohorts){
lines (one_cohort, col=colfunc(20)[i])
i<-i+1 }
legend(x="bottomright",legend=unique(1959:2018),col=colfunc(20), ncol=5, pch=19, title="Year", cex=0.5)
italyM<-lca(italy,series="male",max.age=100)
italyF<-lca(italy,series="female",max.age=100)
italyT<-lca(italy,series="total",max.age=100)
par(mfrow = c(1, 3))
plot(UKM$age,UKM$ax,type="l",main ="Paramètre α du modèle de Lee-Carter",col="blue",xlab="Age",ylab="ax" )
italyM<-lca(italy,series="male",max.age=100)
italyF<-lca(italy,series="female",max.age=100)
italyT<-lca(italy,series="total",max.age=100)
par(mfrow = c(1, 3))
plot(italyM$age,italyM$ax,type="l",main ="Paramètre α du modèle de Lee-Carter",col="blue",xlab="Age",ylab="ax" )
lines(italyF$age,italyF$ax,col="Red")
plot(italyM$age,italyM$bx,type="l",main = " Paramètre β du modèle de Lee-Carter",col="blue",xlab="Age",ylab="bx" )
lines(italyF$age,italyF$bx,col="Red")
plot(italyT$kt,type="l",main ="Paramètre  κt du modèle de Lee-Carter",xlab="annee",ylab="kt" )
lines(x=italyF$year, y=italyF$kt, main="kt", col="red")
lines(x=italyM$year, y=italyM$kt, main="kt", col="blue")
#Estimer la projection centrale (moyenne) sur 20 ans des taux de mortalité à l’aide de la fonction forecast.
fM<-forecast(italyM,h=20)
fF<-forecast(italyF,h=20)
fT<-forecast(italyT,h=20)
par(mfrow=c(1,3))
plot(fM$kt.f,main="Male")
plot(fF$kt.f,main="Female")
plot(fT$kt.f,main="Total")
ratesH<-cbind(italy$rate$male[1:100,],fM$rate$male[1:100,])
ratesF<-cbind(italy$rate$female[1:100,],fF$rate$female[1:100,])
ratesT<-cbind(italy$rate$total [1:100,],fT$rate$total[1:100,])
createActuarialTable<-function(yearOfBirth,rate){
mxcoh <- rate[1:nrow(rate),(yearOfBirth-min(italy$year)+1):ncol(rate)]
cohort.mx <- diag(mxcoh)
cohort.px=exp(-cohort.mx)
#get projected Px
fittedPx=cohort.px
#add px to table
px4Completion=seq(from=cohort.px[length(fittedPx)], to=0, length=20)
totalPx=c(fittedPx,px4Completion[2:length(px4Completion)])
irate=2.5/100
#create life table
cohortLt=probs2lifetable(probs=totalPx, radix=10000,type="px",name=paste("Cohort",yearOfBirth))
cohortAct=new("actuarialtable",x=cohortLt@x,interest=irate, lx=cohortLt@lx ,name=cohortLt@name)
return(cohortAct)
}
tableActuarialeT<-createActuarialTable(1955,ratesT)
tableActuarialeM<-createActuarialTable(1959,ratesH)
tableActuarialeF<-createActuarialTable(1955,ratesF)
ESPF=exm(tableActuarialeF,x=62)
ESPF=exn(tableActuarialeF,x=62)
ESPF
Proba_decesF=qxt(tableActuarialeF, x=62, t=20)
Proba_decesF
ESPM=exn(tableActuarialeM,x=62)
ESPM
Prob_adecesM=qxt(tableActuarialeM, x=62, t=20)
Prob_adecesM
ESPM=exn(lifetableM,x=62)
ESPM
ESPF=exn(lifetableF,x=62)
ESPF
#1er contrat:
#male
VerifVAPM = axn(tableActuarialeM, x=62, n=20)
VerifVAPM
#female
VerifVAPF = axn(tableActuarialeF, x=62, n=20,m=1)
VerifVAPF
#total
VerifVAPT = axn(tableActuarialeT, x=62, n=20)
VerifVAPT
#1er contrat:
#male
VerifVAPM = axn(tableActuarialeM, x=62, n=20)
VerifVAPM
#female
VerifVAPF = axn(tableActuarialeF, x=62, n=20)
VerifVAPF
#total
VerifVAPT = axn(tableActuarialeT, x=62, n=20)
VerifVAPT
#1er contrat:
#male
VerifVAPM = axn(tableActuarialeM, x=62, n=20)
VerifVAPM
#female
VerifVAPF = axn(tableActuarialeF, x=62, n=20,m=1)
VerifVAPF
#total
VerifVAPT = axn(tableActuarialeT, x=62, n=20)
VerifVAPT
#1er contrat:
#male
VerifVAPM = axn(tableActuarialeM, x=62, n=20)
VerifVAPM
#female
VerifVAPF = axn(tableActuarialeF, x=62, n=20)
VerifVAPF
#total
VerifVAPT = axn(tableActuarialeT, x=62, n=20)
VerifVAPT
VAPverif= matrix(c( "male :" ,"female : ", "total :" ,VerifVAPM,VerifVAPT,VerifVAPF),nrow = 3,ncol=2)
VAPverif
shiny::runApp('C:/Users/MSI/Desktop/ACTUARIAT VIE/RShiny/app')
runApp('C:/Users/MSI/Desktop/ACTUARIAT VIE/RShiny/app')
runApp('C:/Users/MSI/Desktop/ACTUARIAT VIE/RShiny/app')
install.packages("shinythemes")
runApp('C:/Users/MSI/Desktop/ACTUARIAT VIE/RShiny/app')
runApp('C:/Users/MSI/Desktop/ACTUARIAT VIE/RShiny/app')
runApp('C:/Users/MSI/Desktop/grp5/Projet-Actuariat-vie-Groupe-5/Application R_shiny _G5_Sujet3/Groupe-5')
shiny::runApp('C:/Users/MSI/Desktop/ACTUARIAT VIE/RShiny/app')
runApp('C:/Users/MSI/Desktop/ACTUARIAT VIE/RShiny/app')
shiny::runApp('C:/Users/MSI/Desktop/ACTUARIAT VIE/RShiny/app')
packageVersion("shiny")
runApp('C:/Users/MSI/Desktop/ACTUARIAT VIE/RShiny/app')
runApp('C:/Users/MSI/Desktop/ACTUARIAT VIE/RShiny/app')
runApp('C:/Users/MSI/Desktop/ACTUARIAT VIE/RShiny/app')
runApp('C:/Users/MSI/Desktop/ACTUARIAT VIE/RShiny/app')
shiny::runApp('C:/Users/MSI/Desktop/ACTUARIAT VIE/RShiny/app')
#total
PrimepureT=axn(acttablet, x=62, m=20)/axn(acttablet, x=62, m=1,n=20)
PrimepureT
#total
PrimepureT=axn(acttablet, x=62, m=20)-axn(acttablet, x=62, m=1,n=20)
PrimepureT
#total
PrimepureT=axn(acttablet, x=62, m=20)-axn(acttablet, x=62, m=20,n=1)
PrimepureT
ESP=matrix(c( "male :" ,"female : ", "total :" ,ESPM,ESPF,ESPt),nrow = 3,ncol=2)
ESP
VAP=matrix(c( "male :" ,"female : ", "total :" ,VAPM,VAPF,VAP_t),nrow = 3,ncol=2)
VAP
#total
PrimepureT=axn(acttablet, x=62, n=20)-axn(acttablet, x=66,n=16)
PrimepureT
#total
PrimepureT=axn(acttablet, x=62, n=20)-axn(acttablet, x=70,n=12)
PrimepureT
#total
PrimepureT=axn(acttablet, x=62, n=20)-axn(acttablet, x=82,n=0)
PrimepureT
#total
PrimepureT=axn(acttablet, x=62, n=20)
PrimepureT
#total
PrimepureT=axn(acttablet, x=62, n=20)-axn(acttablet, x=81,n=1)
PrimepureT
#total
PrimepureT=axn(acttablet, x=62, n=20)-axn(acttablet, x=62,n=15)
PrimepureT
#total
PrimepureT=axn(acttablet, x=62, n=20)-axn(acttablet, x=67,n=15)
PrimepureT
PM <- function(instant_t, age_x){
if (age_x+instant_t < 62){
return(axn(acttablet, x=age_x, n=20)-axn(acttablet, x=(age_x+instant_t),n=(20-instant_t)))
}
else {
return(axn(acttablet, x=(age_x+instant_t), n=(20-instant_t)))
}
}
PrimepureT=axn(acttablet, x=62, n=20)-axn(acttablet, x=67,n=15)
PM(5,50)
PM <- function(instant_t, age_x){
if (age_x+instant_t < 62){
return(axn(acttablet, x=age_x, n=20)-axn(acttablet, x=(age_x+instant_t),n=(20-instant_t)))
}
else {
return(axn(acttablet, x=(age_x+instant_t), n=(20-instant_t)))
}
}
PM(5,50)
PM <- function(instant_t, age_x){
if (age_x+instant_t < 62){
return(axn(acttablet, x=age_x, n=20)-axn(acttablet, x=(age_x+instant_t),n=(20-instant_t)))
}
else {
return(axn(acttablet, x=(age_x+instant_t), n=(20-instant_t)))
}
}
PM(10,53)
